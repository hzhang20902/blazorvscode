@page "/asynccounter"
@rendermode InteractiveServer

<PageTitle>Async Count</PageTitle>

<h1>Async Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
<button class="btn btn-primary" @onclick="AsyncIncrementCount">Click me to wait</button>

<div class="mt-3">
    <h3>Change after entry</h3>
    <input @onchange="OnChange">
    <p>@text</p>
</div>

<div class="mt-3">
    <h3>Change as you type</h3>
    <input @oninput="OnInput">
    <p>@livetext</p>
</div>

<div style="background-color:lightblue" @onmouseover="MouseOver" @onmouseout="MouseOut">@divText</div>

@code {
    private int currentCount = 0;

    string text = "";
    string livetext = "";
    string divText = "Mouse Out";

    private void IncrementCount(MouseEventArgs e) => currentCount++;

    async Task AsyncIncrementCount(){ 
        await Task.Delay(1000); 
        currentCount++;
    }

    private void OnChange(ChangeEventArgs e) => text = (string)e.Value!;

    private void OnInput(ChangeEventArgs e) => livetext = (string)e.Value!;

    private void MouseOver(MouseEventArgs e) => divText = "Mouse Over";

    private void MouseOut(MouseEventArgs e) => divText = "Mouse Out!!!";
}
